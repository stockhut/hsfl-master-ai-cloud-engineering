services:
  db:
    image: "postgres:16"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: "1s"
  auth:
    image: ghcr.io/stockhut/hsfl-master-ai-cloud-engineering/authentication:dev
    build:
      context: ..
      dockerfile: authentication/Dockerfile
    ports:
      - "8080:8080" # http
      - "3001:3001" # grpc
    environment:
      JWT_PRIVATE_KEY: /keys/jwt_private_key.key
      PG_CONN_STRING: postgres://postgres:password@db:5432
    volumes:
      - ./:/keys
    depends_on:
      db:
        condition: service_healthy
  recipe:
    image: ghcr.io/stockhut/hsfl-master-ai-cloud-engineering/recipe:dev
    build:
      context: ..
      dockerfile: recipe/Dockerfile
    ports:
      - "8081:8081" # http
    environment:
      JWT_PUBLIC_KEY: /keys/jwt_public_key.key
      PG_CONN_STRING: postgres://postgres:password@db:5432
      AUTH_RPC_TARGET: auth:3001
    volumes:
      - ./:/keys
    depends_on:
      db:
        condition: service_healthy
  web-service:
    image: ghcr.io/stockhut/hsfl-master-ai-cloud-engineering/web-service:dev
    build:
      context: ..
      dockerfile: web-service/Dockerfile
    ports:
      - "3000:3000"
  reverseproxy:
    image: ghcr.io/stockhut/hsfl-master-ai-cloud-engineering/reverse-proxy:dev
    build:
      context: ..
      dockerfile: reverse-proxy/Dockerfile
    environment:
      CONFIG_FILE: /config/reverse-proxy.yml
    ports:
      - "5000:5000"
    volumes:
      - ./:/config

      
