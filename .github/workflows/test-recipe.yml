name: Test recipe service

on:
  push:
    paths:
      - 'recipe/**'
      - '.github/workflows/test-recipe.yml'

  workflow_dispatch:

jobs:
  test:
    name: Test recipe service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: recipe

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache-dependency-path: recipe/go.sum

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Install mockgen
        run: go install go.uber.org/mock/mockgen@latest

      - name: Go generate mocks
        run: go generate _mocks/gen.go

      - name: Go Vet
        run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: Go Test
        run: go test -race -shuffle=on -coverprofile=coverage.txt ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          flags: recipe
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  build-and-push-image:
      runs-on: ubuntu-latest

      # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ghcr.io/${{ github.repository }}/recipe-service

        # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
        # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
        # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./recipe/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}